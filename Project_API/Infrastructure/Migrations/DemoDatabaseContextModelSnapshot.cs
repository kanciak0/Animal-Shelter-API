// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_API.Infrastructure.Persistence;

#nullable disable

namespace Project_API.Migrations
{
    [DbContext(typeof(DemoDatabaseContext))]
    partial class DemoDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project_API.Entities.Animal_Entity", b =>
                {
                    b.Property<Guid>("Animal_UUID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Animal_UUID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("User_UUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Animal_UUID");

                    b.HasIndex("User_UUID");

                    b.ToTable("Animals", (string)null);
                });

            modelBuilder.Entity("Project_API.Entities.User_Entity", b =>
                {
                    b.Property<Guid>("User_UUID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("User_UUID");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_UUID");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Project_API.Entities.Animal_Entity", b =>
                {
                    b.HasOne("Project_API.Entities.User_Entity", null)
                        .WithMany("Animals")
                        .HasForeignKey("User_UUID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.OwnsOne("Project_API.ValueObjects.UserValueObjects.Species", "Species", b1 =>
                        {
                            b1.Property<Guid>("Animal_EntityAnimal_UUID")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("_Species")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Species");

                            b1.HasKey("Animal_EntityAnimal_UUID");

                            b1.ToTable("Animals");

                            b1.WithOwner()
                                .HasForeignKey("Animal_EntityAnimal_UUID");
                        });

                    b.Navigation("Species")
                        .IsRequired();
                });

            modelBuilder.Entity("Project_API.Entities.User_Entity", b =>
                {
                    b.OwnsOne("Project_API.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("User_EntityUser_UUID")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("City");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Country");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("State");

                            b1.HasKey("User_EntityUser_UUID");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("User_EntityUser_UUID");
                        });

                    b.OwnsOne("Project_API.ValueObjects.UserValueObjects.UserCredentials", "Credentials", b1 =>
                        {
                            b1.Property<Guid>("User_EntityUser_UUID")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Firstname");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Lastname");

                            b1.HasKey("User_EntityUser_UUID");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("User_EntityUser_UUID");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Credentials")
                        .IsRequired();
                });

            modelBuilder.Entity("Project_API.Entities.User_Entity", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
